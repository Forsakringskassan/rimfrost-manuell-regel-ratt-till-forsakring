# Container image configuration
quarkus.container-image.build=true
quarkus.container-image.name=manuell-regel-ratt-till-forsakring
quarkus.container-image.tag=latest
quarkus.container-image.group=rimfrost
quarkus.container-image.push=false

#Deserializer
mp.messaging.incoming.vah-rtf-requests.value.deserializer=se.fk.github.manuellregelratttillforsakring.kafka.VahRtfManuellRequestDeserializer
mp.messaging.incoming.oul-request.value.deserializer=se.fk.github.manuellregelratttillforsakring.kafka.RtfOulExempelResponseDeserializer

#Serializer
mp.messaging.outgoing.vah-rtf-responses.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.oul-responses.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

#Incoming
    # VAH -> RTF
mp.messaging.incoming.vah-rtf-requests.connector=smallrye-kafka
mp.messaging.incoming.vah-rtf-requests.topic=vah-rtf-manuell-requests
mp.messaging.incoming.vah-rtf-requests.auto.offset.reset=earliest
    # RTF <- OUL
mp.messaging.incoming-oul-responses.connector=smallrye-kafka
mp.messaging.incoming-oul-responses.topic=operativt-uppgiftslager-responses
mp.messaging.incoming-oul-responses.auto.offset.reset=earliest

#Outgoing
    # VAH <- RTF
mp.messaging.outgoing.vah-rtf-responses.connector=smallrye-kafka
mp.messaging.outgoing-vah-rtf-responses.topic=vah-rtf-manuell-responses
    # RTF -> OUL
mp.messaging.outgoing.oul-requests.connector=smallrye-kafka
mp.messaging.outgoing-oul-requests.topic=operativt-uppgiftslager-requests

%dev.quarkus.kafka.devservices.enabled=true
#%dev.oul.api.base-url=http://template-k8s-oul:8080
#oul.api.base-url=http://template-k8s-oul:8080
